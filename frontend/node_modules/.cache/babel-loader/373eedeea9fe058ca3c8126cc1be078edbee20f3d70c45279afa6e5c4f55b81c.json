{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const respone = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': application / json\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage \n\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return signup, isLoading, error;\n};\n_s(useSignup, \"fUHXPv7GX4ATQtA7wkH8Wa6JzGc=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","respone","fetch","method","headers","application","json","body","JSON","stringify","response","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/Asus/mern/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport {useAuthContext} from './useAuthContext'\r\n\r\nexport const useSignup = () => {\r\n\r\n    const [error, setError] = useState(null)\r\n\r\n    const [isLoading, setIsLoading] = useState(null)\r\n\r\n    const {dispatch } = useAuthContext()\r\n\r\n    const signup = async (email, password) =>{\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n\r\n        const respone = await fetch('/api/user/signup', {\r\n            method : 'POST',\r\n            headers : { 'Content-Type' : application/json},\r\n            body: JSON.stringify({email, password})\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n\r\n        if ( response.ok ){\r\n            // save the user to local storage \r\n\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            //update the auth context\r\n\r\n            dispatch({type: 'LOGIN', payload : json})\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (signup, isLoading, error)\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAAQC,cAAc,QAAO,kBAAkB;AAE/C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAM;IAACQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEpC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAI;IACrCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAGd,MAAMO,OAAO,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC5CC,MAAM,EAAG,MAAM;MACfC,OAAO,EAAG;QAAE,cAAc,EAAGC,WAAW,GAACC;MAAI,CAAC;MAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMM,IAAI,GAAG,MAAMI,QAAQ,CAACJ,IAAI,CAAC,CAAC;IAElC,IAAI,CAACI,QAAQ,CAACC,EAAE,EAAC;MACbf,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;IACxB;IAEA,IAAKiB,QAAQ,CAACC,EAAE,EAAE;MACd;;MAEAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;;MAElD;;MAEAT,QAAQ,CAAC;QAACiB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAGT;MAAI,CAAC,CAAC;MACzCV,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAQE,MAAM,EAAEH,SAAS,EAAEF,KAAK;AACpC,CAAC;AAAAD,EAAA,CAvCYD,SAAS;EAAA,QAMED,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}