{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage \n\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"fUHXPv7GX4ATQtA7wkH8Wa6JzGc=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/Asus/mern/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport {useAuthContext} from './useAuthContext'\r\n\r\nexport const useLogin = () => {\r\n\r\n    const [error, setError] = useState(null)\r\n\r\n    const [isLoading, setIsLoading] = useState(null)\r\n\r\n    const {dispatch } = useAuthContext()\r\n\r\n    const login = async (email, password) =>{\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n\r\n        const response = await fetch('/api/user/login', {\r\n            method : 'POST',\r\n            headers : { 'Content-Type' : 'application/json'},\r\n            body: JSON.stringify({email, password})\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n\r\n        if ( response.ok ){\r\n            // save the user to local storage \r\n\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            //update the auth context\r\n\r\n            dispatch({type: 'LOGIN', payload : json})\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return {login, isLoading, error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAAQC,cAAc,QAAO,kBAAkB;AAE/C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAM;IAACQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEpC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAI;IACpCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAGd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC5CC,MAAM,EAAG,MAAM;MACfC,OAAO,EAAG;QAAE,cAAc,EAAG;MAAkB,CAAC;MAChDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACbb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IAEA,IAAKQ,QAAQ,CAACQ,EAAE,EAAE;MACd;;MAEAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;;MAEAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAGL;MAAI,CAAC,CAAC;MACzCZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAACE,KAAK;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACpC,CAAC;AAAAD,EAAA,CAvCYD,QAAQ;EAAA,QAMGD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}